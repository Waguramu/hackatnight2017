extends layout

block content
    div#floating-panel(hidden=true)
        b Start:
            select#start
                option(value="munich") Munich
        b End:
            select#end
                option(value="Hamburg") Hamburg
    div(id="map")
    div#warnings-panel(hidden=true)
    button.mapButton#back(type="button", onclick="goBack()")
    button.mapButton#forward(type="button", onclick="goForward()")

block footer
    script.
        function goBack() {
            window.location = '/map'
        }
        function goForward() {
            window.location = '/markers'
        }

    script.
        function initMap() {
            var markerArray = [];
            // Instantiate a directions service.
            var directionsService = new google.maps.DirectionsService;
            // Create a map and center it.
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: {lat: 50.983333, lng: 11.033333}
            });

            // Create a renderer for directions and bind it to the map.
            var directionsDisplay = new google.maps.DirectionsRenderer({map: map});
            // Instantiate an info window to hold step text.
            var stepDisplay = new google.maps.InfoWindow;

            // Display the route between the initial start and end selections.
            calculateAndDisplayRoute(
            directionsDisplay, directionsService, markerArray, stepDisplay, map);
            // Listen to change events from the start and end lists.
            var onChangeHandler = function() {
                calculateAndDisplayRoute(
                directionsDisplay, directionsService, markerArray, stepDisplay, map);
            };
            document.getElementById('start').addEventListener('change', onChangeHandler);
            document.getElementById('end').addEventListener('change', onChangeHandler);
        }

        function calculateAndDisplayRoute(directionsDisplay, directionsService,
            markerArray, stepDisplay, map) {
            // First, remove any existing markers from the map.
            for (var i = 0; i < markerArray.length; i++) {
                markerArray[i].setMap(null);
            }
            // Retrieve the start and end locations and create a DirectionsRequest using
            // WALKING directions.
            directionsService.route({
            origin: document.getElementById('start').value,
                destination: document.getElementById('end').value,
                travelMode: 'DRIVING'
            }, function(response, status) {
                // Route the directions and pass the response to a function to create
                // markers for each step.
                if (status === 'OK') {
                    document.getElementById('warnings-panel').innerHTML =
                    '<b>' + response.routes[0].warnings + '</b>';
                directionsDisplay.setDirections(response);
                showSteps(response, markerArray, stepDisplay, map);
                } else {
                window.alert('Directions request failed due to ' + status);
                }
            });
        }

        function showSteps(directionResult, markerArray, stepDisplay, map) {
            // For each step, place a marker, and add the text to the marker's infowindow.
            // Also attach the marker to an array so we can keep track of it and remove it
            // when calculating new routes.
            var myRoute = directionResult.routes[0].legs[0];
            for (var i = 0; i < myRoute.steps.length; i++) {
                var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;
                marker.setMap(map);
                marker.setPosition(myRoute.steps[i].start_location);
                attachInstructionText(
                stepDisplay, myRoute.steps[i].instructions, map);
            }
        }

        function attachInstructionText(stepDisplay, marker, text, map) {
            google.maps.event.addListener(marker, 'click', function() {
                // Open an info window when the marker is clicked on, containing the text
                // of the step.
                stepDisplay.setContent(text);
                stepDisplay.open(map, marker);
            });
        }

    script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0OKVdnhaVeMED1mB87Mom1yU2gmizBcg&callback=initMap" async defer)
